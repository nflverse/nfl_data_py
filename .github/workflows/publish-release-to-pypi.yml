# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  build-package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Build release distribution
        run: |
          python -m pip install build
          python -m build
      - name: Upload dist as build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - build-package
    permissions:
      id-token: write
    environment:
      name: nfl_data_py
      url: https://pypi.org/p/nfl-data-py/
    steps:
      - name: Retrieve build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/
      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
